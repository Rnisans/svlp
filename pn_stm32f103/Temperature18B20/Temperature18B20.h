#ifndef _TEMPERATURE_18B20_H
#define _TEMPERATURE_18B20_H
#include "one_wire/tm_stm32f4_ds18b20.h"

#ifdef __cplusplus
extern "C" {
#endif

uint8_t TM_DS18B20_Start(TM_OneWire_t* onewire, uint8_t* device);
uint8_t TM_DS18B20_Read(TM_OneWire_t* onewire, uint8_t* device, float* temp);

#ifdef __cplusplus
}
#endif

// Р В Р Р‹Р РЋРІР‚С™Р РЋР вЂљР РЋРЎвЂњР В РЎвЂќР РЋРІР‚С™Р РЋРЎвЂњР РЋР вЂљР В Р’В° Р В РўвЂ�Р В Р’В»Р РЋР РЏ Р РЋР вЂљР В Р’В°Р В Р’В±Р В РЎвЂўР РЋРІР‚С™Р РЋРІР‚в„– OneWire
TM_OneWire_t OneWire;
// Р В РїС—Р…Р В РўвЂ� Р В РўвЂ�Р В Р’В°Р РЋРІР‚С™Р РЋРІР‚РЋР В РЎвЂ�Р В РЎвЂќР В Р’В°
uint8_t device[8];

// Р В РЎС›Р В Р’ВµР В РЎвЂќР РЋРЎвЂњР РЋРІР‚В°Р В Р’В°Р РЋР РЏ Р РЋРІР‚С™Р В Р’ВµР В РЎпїЅР В РЎвЂ”Р В Р’ВµР РЋР вЂљР В Р’В°Р РЋРІР‚С™Р РЋРЎвЂњР РЋР вЂљР В Р’В°
float temperature = 0;

/**
 * Р В РїС—Р…Р В Р вЂ¦Р В РЎвЂ�Р РЋРІР‚В Р В РЎвЂ�Р В Р’В°Р В Р’В»Р В РЎвЂ�Р В Р’В·Р В Р’В°Р РЋРІР‚В Р В РЎвЂ�Р РЋР РЏ Р В РўвЂ�Р В Р’В°Р РЋРІР‚С™Р РЋРІР‚РЋР В РЎвЂ�Р В РЎвЂќР В Р’В° Р РЋРІР‚С™Р В Р’ВµР В РЎпїЅР В РЎвЂ”Р В Р’ВµР РЋР вЂљР В Р’В°Р РЋРІР‚С™Р РЋРЎвЂњР РЋР вЂљР РЋРІР‚в„–
 */
void temperatureInit() {
	// Р В РїС—Р…Р В Р вЂ¦Р В РЎвЂ�Р РЋРІР‚В Р В РЎвЂ�Р В Р’В°Р В Р’В»Р В РЎвЂ�Р В Р’В·Р В Р’В°Р РЋРІР‚В Р В РЎвЂ�Р РЋР РЏ Р В РўвЂ�Р В Р’В°Р РЋРІР‚С™Р РЋРІР‚РЋР В РЎвЂ�Р В РЎвЂќР В Р’В° Р РЋРІР‚С™Р В Р’ВµР В РЎпїЅР В РЎвЂ”Р В Р’ВµР РЋР вЂљР В Р’В°Р РЋРІР‚С™Р РЋРЎвЂњР РЋР вЂљР РЋРІР‚в„–
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);

	TM_OneWire_Init(&OneWire, GPIOA, GPIO_Pin_4);
	TM_OneWire_First(&OneWire);
	TM_OneWire_GetFullROM(&OneWire, device);
	//TM_DS18B20_SetResolution(&OneWire, device,  TM_DS18B20_Resolution_12bits);
	TM_DS18B20_Start(&OneWire, device);
}

/**
 * Р В РЎвЂєР В Р’В±Р В Р вЂ¦Р В РЎвЂўР В Р вЂ Р В РЎвЂ�Р РЋРІР‚С™Р РЋР Р‰ Р РЋРІР‚С™Р В Р’ВµР В РЎпїЅР В РЎвЂ”Р В Р’ВµР РЋР вЂљР В Р’В°Р РЋРІР‚С™Р РЋРЎвЂњР РЋР вЂљР РЋРЎвЂњ
 */
void updateTemp() {
	uint8_t r = 0;
	int8_t cnt = 0;

	//Р В РЎвЂ”Р РЋР вЂљР В Р’ВµР РЋР вЂљР РЋРІР‚в„–Р В Р вЂ Р В Р’В°Р В Р вЂ¦Р В РЎвЂ�Р РЋР РЏ Р В Р’В·Р В Р’В°Р В РЎвЂ”Р РЋР вЂљР В Р’ВµР РЋРІР‚В°Р В Р’В°Р РЋРІР‚С™Р РЋР Р‰ Р В Р вЂ¦Р В Р’ВµР В Р’В»Р РЋР Р‰Р В Р’В·Р РЋР РЏ! Р В Р вЂ¦Р В РЎвЂў Р В РЎвЂўР В Р’В±Р В РЎпїЅР В Р’ВµР В Р вЂ¦ Р РЋР С“ Р РЋРІР‚С™Р В Р’ВµР РЋР вЂљР В РЎпїЅР В РЎвЂўР РЋР С“Р В Р’ВµР В Р вЂ¦Р РЋР С“Р В РЎвЂўР РЋР вЂљР В РЎвЂўР В РЎпїЅ Р РЋР С“Р В Р’В±Р В РЎвЂ�Р В Р вЂ Р В Р’В°Р В Р’ВµР РЋРІР‚С™Р РЋР С“Р РЋР РЏ Р В Р’ВµР РЋР С“Р В Р’В»Р В РЎвЂ� Р В РЎвЂ”Р РЋР вЂљР В РЎвЂўР В РІвЂћвЂ“Р В РўвЂ�Р В Р’ВµР РЋРІР‚С™ Р В РЎвЂ”Р РЋР вЂљР В Р’ВµР РЋР вЂљР РЋРІР‚в„–Р В Р вЂ Р В Р’В°Р В Р вЂ¦Р В РЎвЂ�Р В Р’Вµ
	while ((r == 0) && (cnt < 10)) {
		r = TM_DS18B20_Read(&OneWire, device, &temperature);
		cnt ++;
	}
	TM_DS18B20_Start(&OneWire, device);
}

/**
 * Р В РЎСџР В РЎвЂўР В Р’В»Р РЋРЎвЂњР РЋРІР‚РЋР В РЎвЂ�Р РЋРІР‚С™Р РЋР Р‰ Р РЋРІР‚С™Р В Р’ВµР В РЎвЂќР РЋРЎвЂњР РЋРІР‚В°Р РЋРЎвЂњР РЋР вЂ№ Р РЋРІР‚С™Р В Р’ВµР В РЎпїЅР В РЎвЂ”Р В Р’ВµР РЋР вЂљР В Р’В°Р РЋРІР‚С™Р РЋРЎвЂњР РЋР вЂљР РЋРЎвЂњ
 */
float getTemp() {
	return temperature;
}


#endif // _TEMPERATURE_18B20_H
